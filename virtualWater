/**
 *  virtualContact
 *
 *  Copyright 2015 Todd Whitehead - Based on Code byt Daniel Ogorchock
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License. You may obtain a copy of the License at:
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed
 *  on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License
 *  for the specific language governing permissions and limitations under the License.
 *
 */
metadata {
	definition (name: "Virtual Water", namespace: "toddtmw", author: "Todd Whitehead") {
		capability "Water Sensor"
        
        command "wetme"
        command "dryme"
	}
 
	simulator {
		// TODO: define status and reply messages here
	}
 
	tiles {
        standardTile("water", "device.water", width: 1, height: 1) {
			state("dry", icon:"st.alarm.water.dry", backgroundColor:"#ffffff")
			state("wet", icon:"st.alarm.water.wet", backgroundColor:"#53a7c0")
		}

        
    main(["water"])
	details(["water"])
	}
}
 
// parse events into attributes
def parse(String description) {
	log.debug "Parsing '${description}'"
	// TODO: handle 'contact' attribute
 
}
 
def wetme() {
    log.debug "Virtual Contact wet"
    sendEvent(name: "water", value: "wet")
}
 
def dryme() {
    log.debug "Virtual Contact dry"
    sendEvent(name: "water", value: "dry")
}
